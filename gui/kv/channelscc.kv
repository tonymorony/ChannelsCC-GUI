#:import ListAdapter kivy.adapters.listadapter.ListAdapter
#:import App kivy.app
#:import ScreenManagement gui.screens.screenmanagement
#:import UserPage gui.screens.userpage
#:import LoginPage gui.screens.loginpage
#:import ChannelCreateScreen gui.screens.channelcreation
#:import ChannelListItemButton gui.buttons.channelbutton
#:import CreateChannelButton gui.buttons.createchannel
#:import RefreshChannelsListButton gui.buttons.refreshlist
#:import ChannelsLibrary lib.channelslib


ScreenManagement:
    LoginPage:
        id: loginpage
    UserPage:
        id: userpage
    ChannelCreationPage:
        id: channelcreation

<LoginPage>:
    name: "login_page"
    BoxLayout:
        orientation: 'vertical'
        Image:
            source: 'gui/img/logo.png'
            size_hint: 1, 0.3
        GridLayout:
            rows: 5
            Label:
                text: "RPC Server:"
            TextInput:
                id: rpcserver
                text: ChannelsLibrary.ConfigReader().rpc_server
            Label:
                text: "RPC User:"
            TextInput:
                id: rpcuser
                text: ChannelsLibrary.ConfigReader().rpc_user
            Label:
                text: "RPC Password:"
            TextInput:
                id: rpcpassword
                text: ChannelsLibrary.ConfigReader().rpc_password
            Label:
                text: "RPC Port:"
            TextInput:
                id: port
                text: ChannelsLibrary.ConfigReader().rpc_port
            Label:
                text: "Save login details?"
            CheckBox:
                id: savelogin
                active: True
        Button:
            text: "Try to connect"
            size_hint: 1, 0.2
            on_release: root.verify_credentials()


<UserPage>:
    name: "user"
    on_enter: channelslist.adapter.data = ChannelsLibrary.get_channels_list(app.rpc_connection)
    BoxLayout:
        orientation: 'vertical'
        GridLayout:
            rows: 1
            size_hint: 1, 0.1
            Label:
                text: "Channels list:"
            Label:
                text: "Channel info:"
        BoxLayout:
            id: mainbox
            orientation: 'horizontal'
            ScrollView:
                id: channelsscroll
                ListView:
                    size_hint: 1, 1
                    name: 'channelslist'
                    id: channelslist
                    adapter: ListAdapter(data = ChannelsLibrary.get_channels_list(app.rpc_connection), cls = 'ChannelListItemButton')
            Label:
                id: channelinformation
                text: "Follow the White Rabbit"
                size_hint: 1, 1
                text_size: self.size
                padding: 2,2
                valign: 'top'
                halign: 'center'
        BoxLayout:
            size_hint: 1, 0.17
            orientation: "vertical"
            RefreshChannelsListButton:
                id: refreshchlist
                text: "Refresh channels list"
                size_hint: 1, 0.15
                on_release: channelslist.adapter.data = ChannelsLibrary.get_channels_list(app.rpc_connection)
            CreateChannelButton:
                id: createchannel
                text: "Open new channel"
                size_hint: 1, 0.15
                on_release: root.manager.current = "channelcreation"
            Button:
                id: changerpc
                text: "Change RPC connection credentials"
                size_hint: 1, 0.15
                on_release: root.manager.current = "login_page"


<ChannelCreationPage>:
    name: "channelcreation"
    BoxLayout:
        orientation: "vertical"
        Label:
            id: creationstatus
            text: "Input your channel details"
            size_hint: 1, 0.2
            text_size: self.size
            markup: True
            valign: "center"
            halign: "center"
        GridLayout:
            rows: 3
            size_hint: 1, 0.5
            Label:
                text: "Destination pubkey:"
                size: self.texture_size
                text_size: self.size
                valign: 'middle'
                halign: 'center'
            TextInput:
                id: destpubkey
            Label:
                text: "Number of payments:"
                size: self.texture_size
                text_size: self.size
                valign: 'middle'
                halign: 'center'
            TextInput:
                id: numpayments
            Label:
                text: "Denomnination (in satoshis):"
                size: self.texture_size
                text_size: self.size
                valign: 'middle'
                halign: 'center'
            TextInput:
                id: denomination
        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, 0.1
            Button:
                id: createchanelinit
                text: "Open channel"
                size_hint: 0.5, 1
                on_release: root.create_channel()
            Button:
                id: back
                text: "Back"
                size_hint: 0.5, 1
                on_release: root.manager.current = "user"

